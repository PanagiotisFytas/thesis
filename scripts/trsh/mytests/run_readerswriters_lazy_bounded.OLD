import os
import subprocess
import matplotlib.pyplot as plt

max_N = 6
max_B = 4

def count_total_traces(cmd):
	command = cmd 
	output = subprocess.getoutput(command)
	#print(output)
	output = output.split()
	index = output.index("count:") + 1
	count = int(output[index])
	sleep_set_blocked = int(output[index+2])
	total = count+ sleep_set_blocked
	#print(cmd)
	#print(total)
	return total

def run_nidhugg(program,mode,bound,define=-1):
	#print(program)
	df = ""
	nidhugg = "nidhuggc"
	if define >= 0:
		df = ("-DN=%d -- " % define)
	if ".ll" in program:
		nidhugg = "nidhugg"

	return count_total_traces(nidhugg + " " + df + " --sc --preemption-bounding=%s --bound=%d " %(mode,bound) + program )



programs = list(range(2,max_N))
fig = plt.figure()
st = fig.suptitle("Impact of bound")

for ts in programs:
	pbs = []
	lazies = []
	vans = []
	ax = fig.add_subplot(max_N-1,1,ts-1)
	df = ts
	for b in range(0,max_B):
		Van = str(run_nidhugg("readerswriters.c","S",b, df))
		lazy = str(run_nidhugg("readerswriters.c","L",b, df))
		PB = str(run_nidhugg("readerswriters.c","PB",b, df))
		vans.append(Van)
		pbs.append(PB)
		lazies.append(lazy)

	x = list(range(0,max_B))
	ax.set_title("N=%d"%ts)
	ax.plot(x,vans, label='Vanilla-BPOR')
	ax.plot(x,lazies, label='Lazy')
	ax.plot(x,pbs, label='BPOR')

fig.tight_layout()
st.set_y(0.95)
fig.subplots_adjust(top=0.85)
plt.legend()
plt.savefig('wNrLB.png')

