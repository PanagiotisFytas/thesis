@book{Armstrong:1996:CPE:229883,
 author = {Virding, Robert and Wikstr\"{o}m, Claes and Williams, Mike},
 editor = {Armstrong, Joe},
 title = {Concurrent Programming in ERLANG (2Nd Ed.)},
 year = {1996},
 isbn = {0-13-508301-X},
 publisher = {Prentice Hall International (UK) Ltd.},
 address = {Hertfordshire, UK, UK},
}

@book{Armstrong:2007:PES:1403889,
 author = {Armstrong, Joe},
 title = {Programming Erlang: Software for a Concurrent World},
 year = {2007},
 isbn = {193435600X, 9781934356005},
 publisher = {Pragmatic Bookshelf},
} 

@inproceedings{AbdullaAronisJohnssonSagonasDPOR2014,
author = {Abdulla, Parosh and Aronis, Stavros and Jonsson, Bengt and Sagonas, Konstantinos},
 title = {Optimal Dynamic Partial Order Reduction},
 booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '14},
 year = {2014},
 isbn = {978-1-4503-2544-8},
 location = {San Diego, California, USA},
 pages = {373--384},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2535838.2535845},
 doi = {10.1145/2535838.2535845},
 acmid = {2535845},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrency, dynamic partial oder reduction, software model checking, source sets, systematic testing, wakeup trees},
} 

@inproceedings{Godefroid:1997:MCP:263699.263717,
 author = {Godefroid, Patrice},
 title = {Model Checking for Programming Languages Using VeriSoft},
 booktitle = {Proceedings of the 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '97},
 year = {1997},
 isbn = {0-89791-853-3},
 location = {Paris, France},
 pages = {174--186},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/263699.263717},
 doi = {10.1145/263699.263717},
 acmid = {263717},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@book{Godefroid1996,
 author = {Godefroid, Patrice},
 title = {Partial-Order Methods for the Verification of Concurrent Systems: An Approach to the State-Explosion Problem},
 year = {1996},
 isbn = {3540607617},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
}

@InProceedings{10.1007/3-540-17906-2_30,
  author="Mazurkiewicz, Antoni",
  editor="Brauer, W.
  and Reisig, W.
  and Rozenberg, G.",
  title="Trace theory",
  booktitle="Petri Nets: Applications and Relationships to Other Models of Concurrency",
  year="1987",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="278--324",
  abstract="The concept of traces has been introduced for describing non-sequential behaviour of concurrent systems via its sequential observations. Traces represent concurrent processes in the same way as strings represent sequential ones. The theory of traces can be used as a tool for reasoning about nets and it is hoped that applying this theory one can get a calculus of the concurrent processes anologous to that available for sequential systems. The following topics will be discussed: algebraic properties of traces, trace models of some concurrency phenomena, fixed-point calculus for finding the behaviour of nets, modularity, and some applications of the presented theory.",
  isbn="978-3-540-47926-0"
}

@InProceedings{Static1997,
author="Kurshan, R.
and Levin, V.
and Minea, M.
and Peled, D.
and Yenig{\"u}n, H.",
editor="Steffen, Bernhard",
title="Static partial order reduction",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="1998",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="345--357",
isbn="978-3-540-69753-4"
}

@inproceedings{FlanaganDPOR,
 author = {Flanagan, Cormac and Godefroid, Patrice},
 title = {Dynamic Partial-order Reduction for Model Checking Software},
 booktitle = {Proceedings of the 32nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '05},
 year = {2005},
 isbn = {1-58113-830-X},
 location = {Long Beach, California, USA},
 pages = {110--121},
 numpages = {12},
 url = "\url{http://doi.acm.org/10.1145/1040305.1040315}",
 doi = {10.1145/1040305.1040315},
 acmid = {1040315},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {partial-order reduction, software model checking},
}

@INPROCEEDINGS{Mattern88virtualtime,
    author = {Friedemann Mattern},
    title = {Virtual Time and Global States of Distributed Systems},
    booktitle = {PARALLEL AND DISTRIBUTED ALGORITHMS},
    year = {1988},
    pages = {215--226},
    publisher = {North-Holland}
}

 @phdthesis{Aronis_2018,
  place={Uppsala},
  series={Digital Comprehensive Summaries of Uppsala Dissertations from the Faculty of Science and Technology},
  title={Effective Techniques for Stateless Model Checking}, ISBN={978-91-513-0160-0}, 
  url={http://urn.kb.se/resolve?urn=urn:nbn:se:uu:diva-333541}, 
  abstractNote={Stateless model checking is a technique for testing and 
  verifying concurrent programs, based on exploring the different ways in which operations executed by the 
  processes of a concurrent program can be scheduled. The goal of the technique is to expose all behaviours that 
  can be a result of scheduling non-determinism. As the number of possible schedulings is huge, however, techniques 
  that reduce the number of schedulings that must be explored to achieve veriﬁcation have been developed. Dynamic partial order 
  reduction (DPOR) is a prominent such technique.This dissertation presents a number of improvements to dynamic partial order 
  reduction that signiﬁcantly increase the effectiveness of stateless model checking. Central among these improvements are the 
  Source and Optimal DPOR algorithms (and the theoretical framework behind them) and a technique that allows the observability of 
  the interference of operations to be used in dynamic partial order reduction. Each of these techniques can exponentially decrease 
  the number of schedulings that need to be explored to verify a concurrent program. The dissertation also presents a simple bounding 
  technique that is compatible with DPOR algorithms and effective for ﬁnding bugs in concurrent programs, if the number of schedulings
  is too big to make full veriﬁcation possible in a reasonable amount of time, even when the improved algorithms are used.All
  improvements have been implemented in Concuerror, a tool for applying stateless model checking to Erlang programs. In order 
  to increase the effectiveness of the tool, the interference of the high-level operations of the Erlang/OTP implementation is 
  examined, classiﬁed and precisely characterized. Aspects of the implementation of the tool are also described. Finally, a use
  case is presented, showing how Concuerror was used to ﬁnd bugs and verify key correctness properties in repair techniques for
  the CORFU chain replication protocol.},
  author={Aronis, Stavros},
  year={2018},
  collection={Digital Comprehensive Summaries of Uppsala Dissertations from the Faculty of Science and Technology}
}

@InProceedings{10.1007/3-540-53863-1_36,
author="Valmari, Antti",
editor="Rozenberg, Grzegorz",
title="Stubborn sets for reduced state space generation",
booktitle="Advances in Petri Nets 1990",
year="1991",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="491--515",
abstract="The ``stubborn set'' theory and method for generating reduced state spaces is presented. The theory takes advantage of concurrency, or more generally, of the lack of interaction between transitions, captured by the notion of stubborn sets. The basic method preserves all terminal states and the existence of nontermination. A more advanced version suited to the analysis of properties of reactive systems is developed. It is shown how the method can be used to detect violations of invariant properties. The method preserves the liveness (in Petri net sense) of transitions, and livelocks which cannot be exited. A modification of the method is given which preserves the language generated by the system. The theory is developed in an abstract variable/transition framework and adapted to elementary Petri nets, place/transition nets with infinite capacity of places, and coloured Petri nets.",
isbn="978-3-540-46369-6"
}

@Article{POR,
author="Clarke, E.M.
and Grumberg, O.
and Minea, M.
and Peled, D.",
title="State space reduction using partial order techniques",
journal="International Journal on Software Tools for Technology Transfer",
year="1999",
month="Nov",
day="01",
volume="2",
number="3",
pages="279--287",
abstract="With the advancement of computer technology, highly concurrent systems are being developed. The verification of such systems is a challenging task, as their state space grows exponentially with the number of processes. Partial order reduction is an effective technique to address this problem. It relies on the observation that the effect of executing transitions concurrently is often independent of their ordering. In this paper we present the basic principles behind partial order reduction and its implementation.",
issn="1433-2779",
doi="10.1007/s100090050035",
url="https://doi.org/10.1007/s100090050035"
}

@inproceedings{Yang:2007:DDP:1770532.1770541,
 author = {Yang, Yu and Chen, Xiaofang and Gopalakrishnan, Ganesh and Kirby, Robert M.},
 title = {Distributed Dynamic Partial Order Reduction Based Verification of Threaded Software},
 booktitle = {Proceedings of the 14th International SPIN Conference on Model Checking Software},
 year = {2007},
 isbn = {978-3-540-73369-0},
 location = {Berlin, Germany},
 pages = {58--75},
 numpages = {18},
 url = {http://dl.acm.org/citation.cfm?id=1770532.1770541},
 acmid = {1770541},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{Simsa2012ScalableDP,
  title={Scalable Dynamic Partial Order Reduction},
  author={Jir{\'i} Simsa and Randy Bryant and Garth A. Gibson and Jason Hickey},
  booktitle={RV},
  year={2012}
}

@misc{ wiki:timeslice,
    author = "{Wikipedia contributors}",
    title = "Preemption (computing) --- {Wikipedia}{,} The Free Encyclopedia",
    year = "2018",
    howpublished = "\url{https://en.wikipedia.org/w/index.php?title=Preemption_(computing)&oldid=838871409}",
    note = "[Online; accessed 18-October-2018]"
  }

@INPROCEEDINGS{6569727, 
author={M. Christakis and A. Gotovos and K. Sagonas}, 
booktitle={2013 IEEE Sixth International Conference on Software Testing, Verification and Validation}, 
title={Systematic Testing for Detecting Concurrency Errors in Erlang Programs}, 
year={2013}, 
volume={}, 
number={}, 
pages={154-163}, 
keywords={concurrency control;concurrent engineering;program testing;search problems;software tools;concurrency error detection;Erlang programs;systematic testing tool;Erlang actor model characteristics;stateless search strategy;process interleaving sequence state space;unit tests;combinatorial explosion;heuristic algorithm;Concurrent computing;Instruments;Testing;Space exploration;Runtime;Systematics;Context}, 
doi={10.1109/ICST.2013.50}, 
ISSN={2159-4848}, 
month={March},}

@inproceedings{Gotovos:2011:TDC:2034654.2034664,
 author = {Gotovos, Alkis and Christakis, Maria and Sagonas, Konstantinos},
 title = {Test-driven Development of Concurrent Programs Using Concuerror},
 booktitle = {Proceedings of the 10th ACM SIGPLAN Workshop on Erlang},
 series = {Erlang '11},
 year = {2011},
 isbn = {978-1-4503-0859-5},
 location = {Tokyo, Japan},
 pages = {51--61},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2034654.2034664},
 doi = {10.1145/2034654.2034664},
 acmid = {2034664},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {erlang, test-driven development},
} 

@article{Lei:2006:RTC:1248722.1248743,
 author = {Lei, Yu and Carver, Richard H.},
 title = {Reachability Testing of Concurrent Programs},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {June 2006},
 volume = {32},
 number = {6},
 month = jun,
 year = {2006},
 issn = {0098-5589},
 pages = {382--403},
 numpages = {22},
 url = {http://dx.doi.org/10.1109/TSE.2006.56},
 doi = {10.1109/TSE.2006.56},
 acmid = {1248743},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {Software testing, Software testing, reachability testing, concurrent programming., concurrent programming., reachability testing},
} 

@ARTICLE{4785860, 
author={G. E. Moore}, 
journal={IEEE Solid-State Circuits Society Newsletter}, 
title={Cramming more components onto integrated circuits, Reprinted from Electronics, volume 38, number 8, April 19, 1965, pp.114 ff.}, 
year={2006}, 
volume={11}, 
number={3}, 
pages={33-35}, 
keywords={Integrated circuits;Computers;Silicon;Films;Heating;Microwave amplifiers;Data mining}, 
doi={10.1109/N-SSC.2006.4785860}, 
ISSN={1098-4232}, 
month={Sept},}

@inproceedings{Musuvathi:2008:FRH:1855741.1855760,
 author = {Musuvathi, Madanlal and Qadeer, Shaz and Ball, Thomas and Basler, Gerard and Nainar, Piramanayagam Arumuga and Neamtiu, Iulian},
 title = {Finding and Reproducing Heisenbugs in Concurrent Programs},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {267--280},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=1855741.1855760},
 acmid = {1855760},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@article{Godefroid:2005:SMC:1084665.1084674,
 author = {Godefroid, Patrice},
 title = {Software Model Checking: The VeriSoft Approach},
 journal = {Form. Methods Syst. Des.},
 issue_date = {March     2005},
 volume = {26},
 number = {2},
 month = mar,
 year = {2005},
 issn = {0925-9856},
 pages = {77--101},
 numpages = {25},
 url = {http://dx.doi.org/10.1007/s10703-005-1489-x},
 doi = {10.1007/s10703-005-1489-x},
 acmid = {1084674},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {program verification, software model checking, systematic testing},
} 

@inproceedings{Abdulla:2015:SMC:2945565.2945622,
 author = {Abdulla, Parosh Aziz and Aronis, Stavros and Atig, Mohamed Faouzi and Jonsson, Bengt and Leonardsson, Carl and Sagonas, Konstantinos},
 title = {Stateless Model Checking for TSO and PSO},
 booktitle = {Proceedings of the 21st International Conference on Tools and Algorithms for the Construction and Analysis of Systems - Volume 9035},
 year = {2015},
 isbn = {978-3-662-46680-3},
 pages = {353--367},
 numpages = {15},
 url = {https://doi.org/10.1007/978-3-662-46681-0_28},
 doi = {10.1007/978-3-662-46681-0_28},
 acmid = {2945622},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@article{simsa2011efficient,
 author = "J. Simsa and R. Bryant and G. Gibson and J. Hickey",
 title = "Efficient Exploratory Testing of Concurrent Systems",
 journal = "CMU-PDL Technical Report",
 volume = "113",
 month = nov,
 year = 2011
}

@book{yang2008inspect,
 author = "Y. Yang and X. Chen and G. Gopalakrishnan",
 title = "Inspect: A Runtime Model Checker for Multithreaded C Programs",
 publisher = "University of Utah Tech",
 year = 2008
}